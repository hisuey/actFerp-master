<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hups.purchase.dao.BillPurchaseQuoteMapperExpand">

    <resultMap id="billPurchaseQuotePoMap" type="cn.hups.purchase.po.BillPurchaseQuotePo">
        <result column="pkPurchaseQuote" property="pkPurchaseQuote" jdbcType="INTEGER" />
        <result column="pkProductOrderB" property="pkProductOrderB" jdbcType="INTEGER" />
        <result column="contractno" property="contractno" jdbcType="VARCHAR" />
        <result column="pkCustomer" property="pkCustomer" jdbcType="INTEGER" />
        <result column="customerCode" property="customerCode" jdbcType="VARCHAR" />
        <result column="pkPsndoc" property="pkPsndoc" jdbcType="INTEGER" />
        <result column="pkPsndocShow" property="pkPsndocShow" jdbcType="VARCHAR" />
        <result column="pkProduct" property="pkProduct" jdbcType="INTEGER" />
        <result column="productCode" property="productCode" jdbcType="VARCHAR" />
        <result column="productName" property="productName" jdbcType="VARCHAR" />
        <result column="productModel" property="productModel" jdbcType="VARCHAR" />
        <result column="productOrderNumber" property="productOrderNumber" jdbcType="INTEGER" />
        <result column="productNum" property="productNum" jdbcType="INTEGER" />
        <result column="productSteelMeshSource" property="productSteelMeshSource" jdbcType="CHAR" />
        <result column="productMaterialSource" property="productMaterialSource" jdbcType="CHAR" />
        <result column="purchasePrice" property="purchasePrice" jdbcType="DOUBLE" />
        <result column="purchaseTotal" property="purchaseTotal" jdbcType="DOUBLE" />
        <result column="quoteEndDate" property="quoteEndDate" jdbcType="CHAR" />
        <result column="fileName" property="fileName" jdbcType="VARCHAR" />
        <result column="fileFullname" property="fileFullname" jdbcType="VARCHAR" />
        <result column="taskId" property="taskId" jdbcType="VARCHAR" />
        <result column="billState" property="billState" jdbcType="INTEGER" />
        <result column="approver" property="approver" jdbcType="INTEGER" />
        <result column="approverShow" property="approverShow" jdbcType="VARCHAR" />
        <result column="approvetime" property="approvetime" jdbcType="CHAR" />
        <result column="pkProductOrderB" property="pkProductOrderB" jdbcType="INTEGER" />
        <result column="dr" property="dr" jdbcType="INTEGER" />
        <result column="ts" property="ts" jdbcType="CHAR" />
        <result column="productPcbPrice" property="productPcbPrice" jdbcType="DOUBLE" />
        <result column="productPcbTotal" property="productPcbTotal" jdbcType="DOUBLE" />
        <result column="productPcbPriceSale" property="productPcbPriceSale" jdbcType="DOUBLE" />
        <result column="productPcbTotalSale" property="productPcbTotalSale" jdbcType="DOUBLE" />
        <result column="ispcb" property="ispcb" jdbcType="CHAR" />
        <result column="pcbSource" property="pcbSource" jdbcType="CHAR" />
        <result column="pcbLong" property="pcbLong" jdbcType="DOUBLE" />
        <result column="pcbWide" property="pcbWide" jdbcType="DOUBLE" />
        <result column="pcbThick" property="pcbThick" jdbcType="INTEGER" />
        <result column="pcbResistColor" property="pcbResistColor" jdbcType="VARCHAR" />
        <result column="pcbCharColor" property="pcbCharColor" jdbcType="VARCHAR" />
        <result column="pcbResistCover" property="pcbResistCover" jdbcType="CHAR" />
        <result column="pcbPadSpary" property="pcbPadSpary" jdbcType="CHAR" />
        <result column="pcbCopperThick" property="pcbCopperThick" jdbcType="CHAR" />
        <result column="bomFilename" property="bomFilename" jdbcType="VARCHAR" />
        <result column="bomFilefullname" property="bomFilefullname" jdbcType="VARCHAR" />
        <result column="pcbFilename" property="pcbFilename" jdbcType="VARCHAR" />
        <result column="pcbFilefullname" property="pcbFilefullname" jdbcType="VARCHAR" />
        <result column="craftFilename" property="craftFilename" jdbcType="VARCHAR" />
        <result column="craftFilefullname" property="craftFilefullname" jdbcType="VARCHAR" />
        <collection property="materielPoList" ofType="cn.hups.purchase.po.BillMaterielPo" select="selectPurchaseMaterielByPkProduct" column="pkProduct"/>
    </resultMap>

    <!--查询数据表中数量-->
    <select id="countData" resultType="java.lang.Long">
        SELECT count(bpq.pk_purchase_quote)
        FROM
        bill_purchase_quote bpq
        LEFT JOIN bd_customer bcu on bpq.pk_customer = bcu.pk_customer AND bcu.dr = 0
        LEFT JOIN bd_product bpro on bpq.pk_product = bpro.pk_product AND bpro.dr = 0
        WHERE
        bpq.dr = 0
        <!--任务认领查询条件-->
        <if test="billPurchaseQuotePo != null and billPurchaseQuotePo.approver != null">
            and bpq.approver = #{billPurchaseQuotePo.approver}
        </if>
        <!--查询模板条件-->
        <if test="billPurchaseQuotePo != null and billPurchaseQuotePo.productCode != null and billPurchaseQuotePo.productCode != ''">
            AND instr(bpro.code, #{billPurchaseQuotePo.productCode}) > 0
        </if>
        <if test="billPurchaseQuotePo != null and billPurchaseQuotePo.pkPsndoc != null">
            and bpq.pk_psndoc = #{billPurchaseQuotePo.pkPsndoc}
        </if>
        <if test="billPurchaseQuotePo != null and billPurchaseQuotePo.customerCode != null and billPurchaseQuotePo.customerCode != ''">
            AND instr(bcu.code, #{billPurchaseQuotePo.customerCode}) > 0
        </if>
        <if test="billPurchaseQuotePo != null and billPurchaseQuotePo.billState != null">
            and bpq.bill_state = #{billPurchaseQuotePo.billState}
        </if>
        <if test="billPurchaseQuotePo != null and billPurchaseQuotePo.creationdateBegin != null and billPurchaseQuotePo.creationdateBegin != ''
                                      and billPurchaseQuotePo.creationdateEnd != null and billPurchaseQuotePo.creationdateEnd != ''">
            and bpq.approvetime BETWEEN #{billPurchaseQuotePo.creationdateBegin} AND #{billPurchaseQuotePo.creationdateEnd}
        </if>
    </select>

    <!--分页查询数据-->
    <select id="selectAllPurchaseQuoteAsPage" resultMap="billPurchaseQuotePoMap">
        SELECT
        bpq.pk_purchase_quote as pkPurchaseQuote,
        bpq.contractno,
        bpq.pk_customer as pkCustomer,
        bcu.code as customerCode,
        bpq.pk_psndoc as pkPsndoc,
        bpsn.psnname as pkPsndocShow,
        bpq.pk_product as pkProduct,
        bpro.code as productCode,
        bpro.name as productName,
        bpro.model as productModel,
        bpro.order_number as productOrderNumber,
        bpro.steel_mesh_source as productSteelMeshSource,
        bpro.material_source as productMaterialSource,
        bpq.purchase_price as purchasePrice,
        bpq.purchase_total as purchaseTotal,
        bpq.quote_end_date as quoteEndDate,
        bpq.file_name as fileName,
        bpq.file_fullname as fileFullname,
        bpq.task_id as taskId,
        bpq.bill_state as billState,
        bpq.approver,
        su.user_name as approverShow,
        bpq.approvetime,
        bpq.dr,
        bpq.ts,
        bpob.product_num as productNum,
        bpob.pk_product_order_b as pkProductOrderB,
        bpq.product_pcb_price as productPcbPrice,
        bpq.product_pcb_total as productPcbTotal,
        bpq.product_pcb_price_sale as productPcbPriceSale,
        bpq.product_pcb_total_sale as productPcbTotalSale,
        bpq.pk_product_order_b as pkProductOrderB,
        bpro.ispcb,
        bpro.pcb_source as pcbSource,
        bpro.pcb_long as pcbLong,
        bpro.pcb_wide as pcbWide,
        bpro.pcb_thick as pcbThick,
        bpro.pcb_resist_color as pcbResistColor,
        bpro.pcb_char_color as pcbCharColor,
        bpro.pcb_resist_cover as pcbResistCover,
        bpro.pcb_pad_spary as pcbPadSpary,
        bpro.pcb_copper_thick as pcbCopperThick,
        bpro.bom_filename as bomFilename,
        bpro.bom_filefullname as bomFilefullname,
        bpro.pcb_filename as pcbFilename,
        bpro.pcb_filefullname as pcbFilefullname,
        bpro.craft_filename as craftFilename,
        bpro.craft_filefullname as craftFilefullname
        FROM
        bill_purchase_quote bpq
        LEFT JOIN bd_customer bcu on bpq.pk_customer = bcu.pk_customer AND bcu.dr = 0
        LEFT JOIN bd_product bpro on bpq.pk_product = bpro.pk_product AND bpro.dr = 0
        LEFT JOIN bill_product_order_b bpob on bpq.pk_product_order_b = bpob.pk_product_order_b AND bpob.dr = 0
        LEFT JOIN bd_psndoc bpsn on bpq.pk_psndoc = bpsn.pk_psndoc AND bpsn.dr = 0
        LEFT JOIN sm_user su on su.userid = bpq.approver and su.dr = 0
        WHERE
        bpq.dr = 0
        <!--任务认领查询条件-->
        <if test="billPurchaseQuotePo != null and billPurchaseQuotePo.approver != null">
            and bpq.approver = #{billPurchaseQuotePo.approver}
        </if>
        <!--查询模板条件-->
        <if test="billPurchaseQuotePo != null and billPurchaseQuotePo.productCode != null and billPurchaseQuotePo.productCode != ''">
            AND instr(bpro.code, #{billPurchaseQuotePo.productCode}) > 0
        </if>
        <if test="billPurchaseQuotePo != null and billPurchaseQuotePo.pkPsndoc != null">
            and bpq.pk_psndoc = #{billPurchaseQuotePo.pkPsndoc}
        </if>
        <if test="billPurchaseQuotePo != null and billPurchaseQuotePo.customerCode != null and billPurchaseQuotePo.customerCode != ''">
            AND instr(bcu.code, #{billPurchaseQuotePo.customerCode}) > 0
        </if>
        <if test="billPurchaseQuotePo != null and billPurchaseQuotePo.billState != null">
            and bpq.bill_state = #{billPurchaseQuotePo.billState}
        </if>
        <if test="billPurchaseQuotePo != null and billPurchaseQuotePo.creationdateBegin != null and billPurchaseQuotePo.creationdateBegin != ''
                                      and billPurchaseQuotePo.creationdateEnd != null and billPurchaseQuotePo.creationdateEnd != ''">
            and bpq.approvetime BETWEEN #{billPurchaseQuotePo.creationdateBegin} AND #{billPurchaseQuotePo.creationdateEnd}
        </if>
    </select>

    <!--根据产品主键查询其采购报价物料信息-->
    <select id="selectPurchaseMaterielByPkProduct" resultType="cn.hups.purchase.po.BillMaterielPo" parameterType="java.lang.Integer">
      SELECT
        bm.pk_materiel as pkMateriel,
        bm.pk_product as pkProduct,
        bm.pk_purchase_quote as pkPurchaseQuote,
        bm.row_num as rowNum,
        bm.item_type as itemType,
        bm.model,
        bm.material_name as materialName,
        bm.material_fullname as materialFullname,
        bm.potting,
        bm.norms,
        bm.place_number as placeNumber,
        bm.welding_number as weldingNumber,
        bm.memo,
        bm.brand,
        bm.useg_unit as usegUnit,
        bm.usage_num as usageNum,
        bm.usage_total as usageTotal,
        bm.batching_number as batchingNumber,
        bm.picking_number as pickingNumber,
        bm.backing_number as backingNumber,
        bm.preview_url as previewUrl,
        bm.purchase_unit_price as purchaseUnitPrice,
        bm.purchase_total_price as purchaseTotalPrice,
        bm.sale_unit_price as saleUnitPrice,
        bm.sale_total_price as saleTotalPrice,
        bm.creator,
        bm.creationtime,
        bm.dr,
        bm.ts
    FROM
        bill_materiel bm
    WHERE
        dr = 0
        AND bm.pk_product = #{pkProduct}
    </select>

    <!--查询采购报价中的产品信息作为参照进行返回，单独给工作工具进行使用-->
    <select id="selectPurchaseQuoteToWorkToolRef" resultType="cn.hups.purchase.po.BillPurchaseQuotePo">
        SELECT
          bp.pk_product AS pkProduct,
          bp.name AS productName,
          bp.code AS productCode
        FROM
            bd_product bp
        WHERE
            bp.dr = 0
            <if test="queryParam.pkProduct != null">
                AND bp.pk_product = #{queryParam.pkProduct}
            </if>
    </select>

    <!--根据主键集合删除数据-->
    <update id="deletePurchaseQuoteByPks" parameterType="java.util.List">
        UPDATE bill_purchase_quote SET dr = 1
        WHERE pk_purchase_quote in
        <foreach collection="pkArr" item="pk_purchase_quote" open="(" close=")" separator=",">
            #{pk_purchase_quote}
        </foreach>
    </update>

    <!--认领采购报价任务-->
    <update id="claimPurchaseQuote">
        UPDATE bill_purchase_quote SET task_id = #{taskId},approver = #{userid},bill_state = #{billState}
        WHERE pk_product = #{pkProduct} AND dr = 0
    </update>

    <!--根据条件更新采购报价单据状态-->
    <update id="updatePurchaseQuoteBillstateByExample">
        UPDATE bill_purchase_quote SET bill_state = #{billState}
        <if test="billPurchaseQuotePo != null and billPurchaseQuotePo.taskId != null and billPurchaseQuotePo.taskId != ''">
            ,task_id = #{billPurchaseQuotePo.taskId}
        </if>
        WHERE dr = 0
        <if test="billPurchaseQuotePo != null and billPurchaseQuotePo.pkProduct != null">
            AND pk_product = #{billPurchaseQuotePo.pkProduct}
        </if>
    </update>
</mapper>